# .github/workflows/ci-cd.yml
name: InvestMateAI CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # 🧪 Backend Testing Job
  test-backend:
    name: 🧪 Backend Tests & Security
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_realestate
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: 📦 Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: 🧱 Prepare test database
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_realestate
        run: |
          export PYTHONPATH="${PYTHONPATH}:$(pwd)/backend"
          python -c "
          from app.database import Base, engine
          Base.metadata.create_all(bind=engine)
          print('✅ Database tables created successfully')
          "

      - name: 🧪 Run backend tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_realestate
          SECRET_KEY: test_secret_key_for_ci
          OPENAI_API_KEY: sk-test-key-for-ci-environment-only
          AWS_S3_BUCKET_NAME: test-bucket
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
        run: |
          export PYTHONPATH="${PYTHONPATH}:$(pwd)/backend"
          pytest backend/app/tests/ -v --tb=short

      - name: 🔍 Security & Style checks
        run: |
          pip install safety bandit flake8
          safety check -r backend/requirements.txt --ignore 70612 || echo "⚠️ Safety check completed with warnings"
          bandit -r backend/app/ -ll || echo "⚠️ Bandit scan completed"
          flake8 backend/app/ --count --select=E9,F63,F7,F82 --show-source --statistics || echo "⚠️ Style check completed"

  # 🧰 Frontend Build Job
  build-frontend:
    name: 🧰 Build Frontend (React)
    runs-on: ubuntu-latest
    needs: test-backend

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: 📦 Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: 🏗️ Build frontend
        working-directory: frontend
        run: npm run build

      - name: 📤 Upload frontend build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist

  # 🐳 Backend Docker Build Job
  build-backend:
    name: 🐳 Build Backend Docker Image
    runs-on: ubuntu-latest
    needs: [test-backend, build-frontend]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏗️ Build backend Docker image
        run: |
          docker build -t investmate-ai-backend:latest backend/
          echo "✅ Backend Docker build completed successfully"
